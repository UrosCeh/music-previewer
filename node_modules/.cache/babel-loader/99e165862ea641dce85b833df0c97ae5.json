{"remainingRequest":"/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/babel-loader/lib/index.js!/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/vuetify-loader/lib/loader.js!/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hatch/Documents/Code/Vue-discoverMusic-master/src/components/SingleSong.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hatch/Documents/Code/Vue-discoverMusic-master/src/components/SingleSong.vue","mtime":1586291130000},{"path":"/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hatch/Documents/Code/Vue-discoverMusic-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: [\"song\"],\n  data: function data() {\n    return {\n      performers: [],\n      isActive: false,\n      id: this.song.id\n    };\n  },\n  created: function created() {\n    this.performers = require(\"../songsdb/izvodjaci.json\");\n\n    for (var i = 0; i < this.$store.state.likedSongs.length; i++) {\n      if (this.$store.state.likedSongs[i].id == this.song.id) {\n        this.isActive = true;\n      }\n    }\n  },\n  methods: {\n    getPerformer: function getPerformer(id) {\n      return this.performers.filter(function (performer) {\n        return performer.id == id;\n      })[0].name;\n    },\n    getSongPathById: function getSongPathById(id) {\n      return require(\"../songs/\".concat(id, \".mp3\"));\n    },\n    liked: function liked() {\n      this.isActive = !this.isActive;\n      var pesme = this.$store.state.likedSongs;\n\n      for (var i = 0; i < pesme.length; i++) {\n        if (pesme[i].id == this.song.id) {\n          return pesme.splice(i, 1);\n        }\n      }\n\n      return pesme.push(this.song);\n    }\n  }\n};",{"version":3,"sources":["SingleSong.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,EAAA,EAAA,KAAA,IAAA,CAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,UAAA,GAAA,OAAA,6BAAA;;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,KAAA,IAAA,CAAA,EAAA,EAAA;AACA,aAAA,QAAA,GAAA,IAAA;AACA;AACA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,EADA,EACA;AACA,aAAA,KAAA,UAAA,CAAA,MAAA,CAAA,UAAA,SAAA;AAAA,eAAA,SAAA,CAAA,EAAA,IAAA,EAAA;AAAA,OAAA,EAAA,CAAA,EAAA,IAAA;AACA,KAHA;AAIA,IAAA,eAJA,2BAIA,EAJA,EAIA;AACA,aAAA,OAAA,oBAAA,EAAA,UAAA;AACA,KANA;AAOA,IAAA,KAPA,mBAOA;AACA,WAAA,QAAA,GAAA,CAAA,KAAA,QAAA;AACA,UAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,KAAA,IAAA,CAAA,EAAA,EAAA;AACA,iBAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA;AACA;;AAEA,aAAA,KAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA;AACA;AAjBA;AAjBA,CAAA","sourcesContent":["<template>\n  <div>\n    <v-card-title>{{ song.title }}</v-card-title>\n    <v-card-text>\n      <h3 class=\"mb-2\">{{ getPerformer(song.performerId) }}</h3>\n      <vue-plyr>\n        <audio>\n          <source :src=\"getSongPathById(song.id)\" type=\"audio/mp3\" />\n        </audio>\n      </vue-plyr>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn icon>\n        <v-icon :class=\"{ active: isActive }\" @click=\"liked()\">mdi-heart</v-icon>\n      </v-btn>\n    </v-card-actions>\n  </div>\n</template>\n<script>\n\nexport default {\n  props: [\"song\"],\n  data() {\n    return {\n      performers: [],\n      isActive: false,\n      id: this.song.id,\n    };\n  },\n  created() {\n   this.performers = require('../songsdb/izvodjaci.json')\n    for (var i = 0; i < this.$store.state.likedSongs.length; i++) {\n      if (this.$store.state.likedSongs[i].id == this.song.id) {\n        this.isActive = true;\n      }\n    }\n  },\n  methods: {\n    getPerformer(id){\n      return this.performers.filter(performer => performer.id == id)[0].name;\n    },\n    getSongPathById(id) {\n      return require(`../songs/${id}.mp3`);\n    },\n    liked() {\n      this.isActive = !this.isActive;\n      var pesme = this.$store.state.likedSongs;\n      for (var i = 0; i < pesme.length; i++) {\n        if (pesme[i].id == this.song.id) {\n          return pesme.splice(i, 1); \n        }\n      }\n\n      return pesme.push(this.song); \n    }\n  }\n};\n</script>\n<style scoped>\n.link-style {\n  color: rgba(0, 0, 0, 0.54);\n  text-decoration: none;\n}\n.active.mdi-heart {\n  color: #ff6b6a;\n}\n</style>"],"sourceRoot":"src/components"}]}